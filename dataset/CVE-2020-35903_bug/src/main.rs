// Import necessary crates
#[cfg(test)]
extern crate dync;

use dync::{VecCopy};

// Define a struct with specific alignment to demonstrate the issue.
#[repr(align(256))]
#[derive(Copy, Clone)]
struct LargeAlign(u8);

fn main() {
    // Create an instance of `VecCopy` for the type `LargeAlign`.
    let mut x: VecCopy = VecCopy::with_type::<LargeAlign>();
    
    // Push a new element into the vector.
    x.push_as::<LargeAlign>(LargeAlign(0));
    
    // Attempt to retrieve and reference this element, triggering undefined behavior due to misalignment.
    let _ref_to_element = x.get_ref_as::<LargeAlign>(0).unwrap();
}
