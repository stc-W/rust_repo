// Cargo.toml:
//
//[dependencies]
//arrayfire = "3.5.0" // Assuming 3.5.0 is a version known to work with Rust 1.28

extern crate arrayfire as af;
use af::*;

fn main() {
    let num_rows: u64 = 8;
    let num_cols: u64 = 8;
    let dims = Dim4::new(&[num_rows, num_cols, 1, 1]);
    let be: Backend = Backend::OPENCL; //CPU, CUDA, OPENCL
    
    println!("Create a {}-by-{} matrix of random 32 bit floats on the {}", num_rows, num_cols, be);
 
    af::set_backend(be);
    println!("dims = {}", dims);

    // The following line triggers the bug
    let a = randu::<f64>(dims); // Note: Using f64 as per Aidan's report

    af_print!("a = ", a);

    println!("Device info {:?}", af::get_available_backends());
    println!("Active device {:?}", af::get_active_backend());
}
