#[macro_use]
extern crate autorand;

// Mock a struct that may panic during random generation.
struct UnsafeRandomType;

impl Random for UnsafeRandomType {
    fn random<R: Rng>(_: &mut R) -> Self {
        // Force a panic to simulate an error scenario.
        panic!("Simulating a failure point in `T::random()`.");
    }
}

fn main() {
    // The goal is to demonstrate that if `UnsafeRandomType::random` panics,
    // then the partially initialized array may lead to UB when dropped.
    let _array: [UnsafeRandomType; 5] = autorand::rand(); 
}
