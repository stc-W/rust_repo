use autorand::Random;
use std::cell::Cell;

struct PanicOnSecond {
    id: usize,
}

thread_local! {
    static COUNT: Cell<usize> = Cell::new(0);
}

impl Random for PanicOnSecond {
    fn random() -> Self {
        COUNT.with(|c| {
            let n = c.get();
            if n == 1 {
                panic!("boom on second call"); // triggers during array fill
            }
            c.set(n + 1);
        });
        PanicOnSecond { id: 0 }
    }
}

impl Drop for PanicOnSecond {
    fn drop(&mut self) {
        println!("dropping {}", self.id);
    }
}

fn main() {
    // Any size â‰¥ 2 will hit the panic while the array is still being filled.
    let _arr: [PanicOnSecond; 4] = Random::random();
}
