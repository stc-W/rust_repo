//! UB demo for truetype ≤ 0.30.0 (CVE-2021-28030) – “Option A”
//! Adds a dummy `Seek` impl so `BadReader` satisfies the `Tape` blanket‐impl.

#![forbid(unsafe_code)]

use std::io::{self, Read, Seek, SeekFrom};
use truetype::Tape;

/// Reader that *claims* to have filled the buffer but never writes to it.
struct BadReader;

impl Read for BadReader {
    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {
        // Force a read from *every* byte (XOR-checksum is cheap).
        let _checksum: u8 = buf.iter().copied().fold(0, |a, b| a ^ b);

        Ok(buf.len())   // keep lying: “yes, all bytes are initialised”
    }
}


impl Seek for BadReader {
    fn seek(&mut self, _pos: SeekFrom) -> io::Result<u64> {
        Ok(0)                         // never actually called in this demo
    }
}

fn main() {
    // This hits Tape::take_bytes, which builds an uninitialised Vec and
    // passes it to our lying reader — UB in 0.30.0, safe in ≥ 0.30.1.
    let mut r = BadReader;
    let _ = r.take_bytes(16).unwrap();

    println!("finished (run under Miri to see UB in old versions)");
}
