// main.rs

use std::convert::Into;
use ocl::{Event, EventList};

struct Foo(Option<i32>);

impl Into<Event> for Foo {
    fn into(self) -> Event {
        // This line will cause a panic if `self.0` is None.
        println!("LOUSY PANIC : {}", self.0.unwrap());
        
        Event::empty()
    }
}

impl Drop for Foo {
    fn drop(&mut self) {
        println!("I'm dropping");
    }
}

fn main() {
    // This will trigger the double-drop issue if `into()` panics.
    let eventlist: EventList = [Foo(None)].into();
    
    // Debugging output to see what happens after the potential panic
    dbg!(eventlist);
}
