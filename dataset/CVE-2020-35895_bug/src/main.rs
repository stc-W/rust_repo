// main.rs

#![forbid(unsafe_code)]

use stack::{ArrayVec, Vector, Array};

fn main() {
    // This code triggers the out-of-bounds write bug.
    let mut vec: ArrayVec<[u8; 2]> = ArrayVec::with_capacity(2);
    
    // In debug mode, this will panic due to an integer overflow. 
    // In release mode, it would cause a segmentation fault by writing outside of the allowed memory bounds.
    // This happens because the `insert` method is not checking if the provided index exceeds its capacity.
    vec.insert(5, 0x41);  // Inserting at an out-of-bounds index.

    println!("The vector now has {} elements.", vec.len());
}
