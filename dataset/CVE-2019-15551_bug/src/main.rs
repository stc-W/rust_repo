// Import necessary package from smallvec
use smallvec::SmallVec;

fn main() {
    // Create a SmallVec with inline capacity of 4 elements.
    let mut v: SmallVec<[u8; 4]> = SmallVec::new();

    // Populate it so that it spills to the heap.
    v.push(1);
    v.push(2);
    v.push(3);
    v.push(4);

    // Push one more element to ensure spill happens
    v.push(5);

    // Asserting if the vector spilled to heap (which is expected).
    assert!(v.spilled());

    // Clear all elements from the SmallVec.
    v.clear();

    // Grow to a size that would be within inline capacity after spilling,
    // which should trigger the bug if present.
    v.grow(2);

    // Print out the resulting vector to observe the behavior
    println!("after grow {:?} len={} cap={}", v, v.len(), v.capacity());
}
